/*
   Вам дан список ролей и сценарий пьесы в виде массива строчек.
   Каждая строчка сценария пьесы дана в следующем виде:
   Роль: текст
   Текст может содержать любые символы.
   Напишите метод, который будет группировать строчки по ролям, пронумеровывать их и возвращать результат
   в виде готового текста (см. пример). Каждая группа распечатывается в следующем виде:
   Роль:
   i) текст
   j) текст2
       ...
       ==перевод строки==
   i и j -- номера строк в сценарии. Индексация строчек начинается с единицы, выводить группы следует в соответствии
   с порядком ролей. Переводы строк между группами обязательны, переводы строк в конце текста не учитываются.
*/
package Tsuker;
//import java.util.Arrays;                        // Импорт модуля Arrays

public class Main {

    public static void main(String[] args) {    // Главная программа
        String arr;                             // Вспомогательная строка для приема ответа из методв
        String[] roles = new String[]{          // Массив ролей
                "Городничий",
                "Аммос Федорович",
                "Артемий Филиппович",
                "Лука",
                "Лука Лукич"
        };

        String[] textLines = new String[] {     // Массив сценария
                "Городничий: Я пригласил вас, господа, с тем, чтобы сообщить вам пренеприятное известие: к нам едет ревизор.",
                "Аммос Федорович: Как ревизор?",
                "Артемий Филиппович: Как ревизор?",
                "Городничий: Ревизор из Петербурга, инкогнито. И еще с секретным предписаньем.",
                "Аммос Федорович: Вот те на!",
                "Артемий Филиппович: Вот не было заботы, так подай!",
                "Лука Лукич: Господи боже! еще и с секретным предписаньем!",
                "Лука: Господи боже! Я уронил своё пасхальное яйцо от неожиданности!"
        };

        arr = printTextPerRole(roles, textLines);       // Получение результата из метода
        System.out.println(arr);                        // Печать результата
    }

    public static String printTextPerRole(String[] roles, String[] textLines) {    // Предложено: private String printTextPerRole
        int lenR, lenT;                                 // Длины массивов
        int i, j;                                       // Счетчики циклов
        String name;                                    // Строка имени
        String tlj;                                     // Текущая строка текста роли
        StringBuilder result = new StringBuilder();     // Объект StringBuilder (пустой)

        lenR = roles.length;                            // Длина строки ролей
        lenT = textLines.length;                        // Длина строки текста роли
        //System.out.println(lenR);                     // Вспомогательная печать
        //System.out.println(lenT);
        //System.out.print("Internal: ");
        //System.out.println(result);

        for (i = 0; i < lenR; i++) {                        // Цикл по i (роли) начало
            name = roles[i];                                // Текущее имя роли
            result.append(name).append(":").append("\n");   // Запись в result имени, двоеточия и перевода строки
            for (j = 0; j < lenT; j++) {                    // Цикл по j (текст роли) начало
                tlj = textLines[j];                         // Текущая строки текста текущей роли
                if (tlj.startsWith(name + ":")) {           // if начало. Если это имя роли с двоеточием (разделитель)
                    result.append(j + 1).append(") ").append(tlj.replaceFirst(name + ": ", "")).append("\n");
                                                            // Отбрасываем имя роли с двоеточием, остается ее текст. Перевод строки
                }                                           // if конец
            }                                               // Цикл по j (текст) конец
            result.append("\n");                            // Добавление пустой строки между текстами ролей
        }                                                   // Цикл по i (роли) конец

        return result.toString();                           // Возврат результата
    }
}
